// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// restrictions: dairy-free, meat-free, fish-free, gluten-free, egg-free, nut-free

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  username String
  email String @unique
  password String
  phone String
  profilePicture Bytes?
  tokenVersion Int @default(0)

  role Role @default(CUSTOMER)
  customer Customer?
  driver Driver?
  merchant Merchant?
}


model Customer {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  address String?
  restrictions Boolean[] @default([false, true, true, false, false, false])
  
  userId String @unique @db.ObjectId
  user User @relation(fields: [userId], references: [id])

  cart Cart[]

  voucher Voucher[]
}

model Driver {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  licensePlate String @unique
  vehicleType String

  userId String @unique @db.ObjectId
  user User @relation(fields: [userId], references: [id])
}

model Merchant {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  restaurantName String
  restaurantAddress String
  rating Float? @default(0)

  userId String @unique @db.ObjectId
  user User @relation(fields: [userId], references: [id])
  menu Menu[]
  cart Cart[]
}


model Menu {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  price Float
  description String?
  inStock Boolean @default(true)
  restrictions Boolean[] @default([false, false, false, false, false, false])

  imageId String? @db.ObjectId
  image MenuImage? @relation(fields: [imageId], references: [id])

  merchantId String @db.ObjectId
  merchant Merchant @relation(fields: [merchantId], references: [id])

  cartItem CartItem[]
}

model MenuImage {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  image Bytes

  menu Menu[]
}

model Cart {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  cartItem CartItem[]
  
  customerId String @db.ObjectId
  customer Customer @relation(fields: [customerId], references: [id])

  merchantId String @db.ObjectId
  merchant Merchant @relation(fields: [merchantId], references: [id])

  @@unique([customerId, merchantId])
}

model CartItem{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  quantity Int @default(1)

  cartId String @db.ObjectId
  cart Cart @relation(fields: [cartId], references: [id])

  menuId String @db.ObjectId
  menu Menu @relation(fields: [menuId], references: [id])

  @@unique([cartId, menuId])
}

model Voucher{
  id String @id @default(auto()) @map("_id") @db.ObjectId
  discount Float
  maximumDiscount Float
  minimumPurchase Float
  
  logo String @default("https://drive.google.com/uc?id=1pugaO1_NFSYN4m9FvnFqsWCckfND5euD")
  title String
  description String
  details String

  expiryDate DateTime
  isUsed Boolean @default(false)

  customerId String @db.ObjectId
  customer Customer @relation(fields: [customerId], references: [id])
}

enum Role {
  CUSTOMER
  MERCHANT
  DRIVER
  ADMIN
}